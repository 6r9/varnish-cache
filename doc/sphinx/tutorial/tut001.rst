.. _TUT001:

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
TUT001: Let's see if varnishtest is working
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

In the first window, start this command::

	varnishtest -L20000 S001.vtc

Then in the second window, run this one::

	varnishtest -L20000 C001.vtc

If things work as they should, both programs spit out 5 lines, looking
like this in the first window::

	*    top  TEST S001.vtc starting
	**   s1   Started on 127.0.0.1:20012
	**   s1   Ending
	*    top  RESETTING after S001.vtc
	*    top  TEST S001.vtc completed

and like this in the second window::

	*    top  TEST C001.vtc starting
	**   c1   Starting client
	**   c1   Ending
	*    top  RESETTING after C001.vtc
	*    top  TEST C001.vtc completed

If that did not work, please consult the XXX: troubleshooting section.

Now, try again, but this time run the client with a couple of ``-v``
arguments::

	varnishtest -vv -L20000 C001.vtc

Now the output contains a lot mode detail::

	*    top  TEST C001.vtc starting
	***  top  client
	**   c1   Starting client
	***  c1   Connect to 127.0.0.1:20012
	***  c1   connected fd 3
	***  c1   txreq
	**** c1   txreq| GET / HTTP/1.1\r\n
	**** c1   txreq| \r\n
	***  c1   rxresp
	**** c1   rxhdr| HTTP/1.1 200 Ok\r\n
	**** c1   rxhdr| Foo: bar\r\n
	**** c1   rxhdr| Content-Length: 12\r\n
	**** c1   rxhdr| \r\n
	**** c1   http[ 0] | HTTP/1.1
	**** c1   http[ 1] | 200
	**** c1   http[ 2] | Ok
	**** c1   http[ 3] | Foo: bar
	**** c1   http[ 4] | Content-Length: 12
	**** c1   body| Hello World!
	**** c1   bodylen = 12
	***  c1   closing fd 3
	**   c1   Ending
	*    top  RESETTING after C001.vtc
	*    top  TEST C001.vtc completed

First the client does a ``txreq`` -- "transmit request", and you can
see the HTTP request it sends to the server, a plain boring "GET".

Then it does a ``rxresp`` -- "receive response", and we can see the
HTTP response we get back, including the HTTP object body.

Now try again, this time running the server in the first window with
``-vv``. 

If things do not work the way you expect, adding those ``-v`` options
is a good place to start debugging.

Next we put a Varnish cache between the server and the client: _TUT002
